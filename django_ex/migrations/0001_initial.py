# Generated by Django 2.1.5 on 2019-06-14 08:17

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Ceo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ceoname', models.CharField(max_length=30)),
                ('years', models.IntegerField(choices=[(2019, 2019), (2020, 2020), (2021, 2021)], default=2019)),
                ('item_fields', models.CharField(choices=[('기술분야', '기술분야'), ('BM분야', 'BM분야')], max_length=30)),
                ('work_fields', models.CharField(choices=[('제조업', '제조업'), ('서비스업', '서비스업')], max_length=30)),
                ('setup_fields', models.CharField(choices=[('기창업', '기창업'), ('창업', '창업')], max_length=30)),
                ('plus_points', models.FloatField(blank=True, default=0.0)),
                ('itemname', models.CharField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('th', models.CharField(choices=[('1차', '1차'), ('2차', '2차')], max_length=20)),
                ('score_0', models.IntegerField()),
                ('score_1', models.IntegerField()),
                ('score_2', models.IntegerField()),
                ('score_3', models.IntegerField()),
                ('score_4', models.IntegerField()),
                ('score_5', models.IntegerField()),
                ('score_6', models.IntegerField()),
                ('score_7', models.IntegerField()),
                ('comment', models.TextField(default='')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('ceo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_ceo', to='django_ex.Ceo')),
                ('myuser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='ceo',
            name='ceo_relation',
            field=models.ManyToManyField(through='django_ex.Score', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='score',
            unique_together={('myuser', 'ceo')},
        ),
    ]
